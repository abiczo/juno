Juno
====

- Juno is a simple web framework to allow rapid prototyping of Python
  applications

Say 'Hello, World' in Juno
--------------------------

To start off:

] from juno import *
] 
] @route('/')
] def index(web):
]     return 'Juno says hi'
]
] run()

Add some url handling:

] @route('/hello/:name/')
] def hello(web, name):
]     return 'Hello, %s' %name

Say hello with a query string ('?name=x'):

] @get('/query/')
] def query(web):
]     return 'Hello, %s' %web.input('name')

Say hello with post data (assumes a submitted form with field 'name'):

] @post('/post_query/')
] def post_hello(web):
]     return 'Hello, %s' %web.input('name')

Use implicit urls:

] @get()
] def hi(web):  # Found at /hi/
]     return 'Hi there!'

Use a template (Juno uses Jinja2 templates):

] @get('/hi_template/:name/')
] def template_hi(web, name):
]     return template('hello.html').render(name=name)

Features
--------

- Assign functions based on URLs and request methods.
- Use URL wildcards to pass named arguments to your functions.
- Builtin ties to Jinja2 templates
- Serve static files.
- Currently only interfaces to server through SCGI, but includes a development server.

Help
----

- To set up SCGI for Nginx, use something like (make sure you have mod_scgi):
    
    http {
        server {
            location / {
                scgi_pass   127.0.0.1:6969;
            }
        }
    }

  Juno is set by default to run the development server when using run().  To
  use SCGI, use run('scgi') instead.
    
