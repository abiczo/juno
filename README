
  ~  Juno  ~  
--------------

* Juno is a web framework that was designed to make development as fast
  as possible


Say 'Hello, World' in Juno
--------------------------

To start off:

] from juno import *
] 
] @route('/')
] def index(web):
]     return 'Juno says hi'
]
] run()

Add some url handling:

] @route('/hello/:name/')
] def hello(web, name):
]     return 'Hello, %s' %name

Use a template (Juno uses Jinja2 templates):

] @get('/hi_template/:name/')
] def template_hi(web, name):
]     template('hello.html', name=name)


Database
--------

] from juno import *
]
] Person = model('Person', name='string')
] p = Person(name='brian')
] p.commit()
] p.name                # => u'brian'
] p.id                  # => 1
]
] find(Person)          # => SQLAlchemy query object
] find(Person).all()    # => [ <Person: id = 1> ]


Features
--------

- Assign functions based on URLs and request methods.
- Use URL wildcards to pass named arguments to your functions.
- Builtin ties to Jinja2 templates
- Serve static files.
- Currently only interfaces to server through SCGI, but includes a development 
  server.
- Database access through SQLAlchemy


Help
----

- To set up SCGI for Nginx, use something like (make sure you have mod_scgi):
    
    http {
        server {
            location / {
                scgi_pass   127.0.0.1:8000;
                include     scgi_vars;
            }
        }
    }

  Juno is set by default to run the development server when using run().  To
  use SCGI, use run('scgi') instead.
  
  Note for SCGI:  Due to some threading issues I'm trying to figure out with 
  SQLite, the SCGI server is not multithreaded.
